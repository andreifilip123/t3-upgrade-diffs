diff --git a/.eslintrc.cjs b/.eslintrc.cjs
index 8b7a0e8..2e6e541 100644
--- a/.eslintrc.cjs
+++ b/.eslintrc.cjs
@@ -1,25 +1,15 @@
-// eslint-disable-next-line @typescript-eslint/no-var-requires
-const path = require("path");
-
 /** @type {import("eslint").Linter.Config} */
 const config = {
-  overrides: [
-    {
-      extends: [
-        "plugin:@typescript-eslint/recommended-requiring-type-checking",
-      ],
-      files: ["*.ts", "*.tsx"],
-      parserOptions: {
-        project: path.join(__dirname, "tsconfig.json"),
-      },
-    },
-  ],
   parser: "@typescript-eslint/parser",
   parserOptions: {
-    project: path.join(__dirname, "tsconfig.json"),
+    project: true,
   },
   plugins: ["@typescript-eslint"],
-  extends: ["next/core-web-vitals", "plugin:@typescript-eslint/recommended"],
+  extends: [
+    "next/core-web-vitals",
+    "plugin:@typescript-eslint/recommended-type-checked",
+    "plugin:@typescript-eslint/stylistic-type-checked",
+  ],
   rules: {
     "@typescript-eslint/consistent-type-imports": [
       "warn",
diff --git a/package.json b/package.json
index 89d90b8..3c95b34 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "current",
+  "name": "upgrade",
   "version": "0.1.0",
   "private": true,
   "scripts": {
@@ -11,7 +11,7 @@
   },
   "dependencies": {
     "@next-auth/prisma-adapter": "^1.0.5",
-    "@prisma/client": "^4.14.0",
+    "@prisma/client": "^5.0.0",
     "@t3-oss/env-nextjs": "^0.3.1",
     "next": "^13.4.2",
     "next-auth": "^4.22.1",
@@ -24,14 +24,14 @@
     "@types/node": "^18.16.0",
     "@types/react": "^18.2.6",
     "@types/react-dom": "^18.2.4",
-    "@typescript-eslint/eslint-plugin": "^5.59.6",
-    "@typescript-eslint/parser": "^5.59.6",
+    "@typescript-eslint/eslint-plugin": "6.0.0",
+    "@typescript-eslint/parser": "6.0.0",
     "eslint": "^8.40.0",
     "eslint-config-next": "^13.4.2",
-    "prisma": "^4.14.0",
+    "prisma": "^5.0.0",
     "typescript": "^5.0.4"
   },
   "ct3aMetadata": {
-    "initVersion": "7.14.1"
+    "initVersion": "7.16.0"
   }
 }
diff --git a/prisma/schema.prisma b/prisma/schema.prisma
index a352ad5..0001d80 100644
--- a/prisma/schema.prisma
+++ b/prisma/schema.prisma
@@ -3,7 +3,6 @@
 
 generator client {
     provider = "prisma-client-js"
-    previewFeatures = ["jsonProtocol"]
 }
 
 datasource db {
diff --git a/src/env.mjs b/src/env.mjs
index 30fa238..58bc43a 100644
--- a/src/env.mjs
+++ b/src/env.mjs
@@ -18,7 +18,7 @@ export const env = createEnv({
       // Since NextAuth.js automatically uses the VERCEL_URL if present.
       (str) => process.env.VERCEL_URL ?? str,
       // VERCEL_URL doesn't include `https` so it cant be validated as a URL
-      process.env.VERCEL ? z.string().min(1) : z.string().url(),
+      process.env.VERCEL ? z.string().min(1) : z.string().url()
     ),
     // Add `.min(1) on ID and SECRET if you want to make sure they're not empty
     DISCORD_CLIENT_ID: z.string(),
diff --git a/src/server/auth.ts b/src/server/auth.ts
index e3f5444..c20057e 100644
--- a/src/server/auth.ts
+++ b/src/server/auth.ts
@@ -17,11 +17,11 @@ import { prisma } from "~/server/db";
  */
 declare module "next-auth" {
   interface Session extends DefaultSession {
-    user: {
+    user: DefaultSession["user"] & {
       id: string;
       // ...other properties
       // role: UserRole;
-    } & DefaultSession["user"];
+    };
   }
 
   // interface User {
