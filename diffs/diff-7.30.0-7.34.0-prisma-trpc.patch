diff --git a/.gitignore b/.gitignore
index 2971a0b..9b986df 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,6 +11,7 @@
 # database
 /prisma/db.sqlite
 /prisma/db.sqlite-journal
+db.sqlite
 
 # next.js
 /.next/
diff --git a/next.config.js b/next.config.js
index ffbeb9f..98b6f90 100644
--- a/next.config.js
+++ b/next.config.js
@@ -17,6 +17,7 @@ const config = {
     locales: ["en"],
     defaultLocale: "en",
   },
+  transpilePackages: ["geist"],
 };
 
 export default config;
diff --git a/package.json b/package.json
index dd998ba..4c533fd 100644
--- a/package.json
+++ b/package.json
@@ -1,10 +1,12 @@
 {
-  "name": "current",
+  "name": "upgrade",
   "version": "0.1.0",
   "private": true,
   "type": "module",
   "scripts": {
     "build": "next build",
+    "db:generate": "prisma migrate dev",
+    "db:migrate": "prisma migrate deploy",
     "db:push": "prisma db push",
     "db:studio": "prisma studio",
     "dev": "next dev",
@@ -13,18 +15,19 @@
     "start": "next start"
   },
   "dependencies": {
-    "@prisma/client": "^5.10.2",
-    "@t3-oss/env-nextjs": "^0.9.2",
-    "@tanstack/react-query": "^5.25.0",
+    "@prisma/client": "^5.14.0",
+    "@t3-oss/env-nextjs": "^0.10.1",
+    "@tanstack/react-query": "^5.39.0",
     "@trpc/client": "next",
     "@trpc/next": "next",
     "@trpc/react-query": "next",
     "@trpc/server": "next",
-    "next": "^14.1.3",
-    "react": "18.2.0",
-    "react-dom": "18.2.0",
+    "geist": "^1.3.0",
+    "next": "^14.2.1",
+    "react": "^18.3.0",
+    "react-dom": "^18.3.0",
     "superjson": "^2.2.1",
-    "zod": "^3.22.4"
+    "zod": "^3.23.3"
   },
   "devDependencies": {
     "@types/eslint": "^8.56.2",
@@ -35,11 +38,11 @@
     "@typescript-eslint/parser": "^7.1.1",
     "eslint": "^8.57.0",
     "eslint-config-next": "^14.1.3",
-    "prisma": "^5.10.2",
+    "prisma": "^5.14.0",
     "typescript": "^5.4.2"
   },
   "ct3aMetadata": {
-    "initVersion": "7.30.0"
+    "initVersion": "7.34.0"
   },
   "packageManager": "pnpm@8.5.1"
 }
diff --git a/src/env.js b/src/env.js
index e3e3719..6ca7f3e 100644
--- a/src/env.js
+++ b/src/env.js
@@ -7,12 +7,7 @@ export const env = createEnv({
    * isn't built with invalid env vars.
    */
   server: {
-    DATABASE_URL: z
-      .string()
-      .refine(
-        (str) => !str.includes("YOUR_MYSQL_URL_HERE"),
-        "You forgot to change the default URL"
-      ),
+    DATABASE_URL: z.string().url(),
     NODE_ENV: z
       .enum(["development", "test", "production"])
       .default("development"),
@@ -42,8 +37,8 @@ export const env = createEnv({
    */
   skipValidation: !!process.env.SKIP_ENV_VALIDATION,
   /**
-   * Makes it so that empty strings are treated as undefined.
-   * `SOME_VAR: z.string()` and `SOME_VAR=''` will throw an error.
+   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and
+   * `SOME_VAR=''` will throw an error.
    */
   emptyStringAsUndefined: true,
 });
diff --git a/src/pages/_app.tsx b/src/pages/_app.tsx
index ad916a6..31a28d8 100644
--- a/src/pages/_app.tsx
+++ b/src/pages/_app.tsx
@@ -1,17 +1,13 @@
+import { GeistSans } from "geist/font/sans";
 import { type AppType } from "next/app";
-import { Inter } from "next/font/google";
 
 import { api } from "~/utils/api";
 
 import "~/styles/globals.css";
 
-const inter = Inter({
-  subsets: ["latin"],
-});
-
 const MyApp: AppType = ({ Component, pageProps }) => {
   return (
-    <main className={inter.className}>
+    <main className={GeistSans.className}>
       <Component {...pageProps} />
     </main>
   );
