diff --git a/package.json b/package.json
index ef3dda6..8d66082 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "current",
+  "name": "upgrade",
   "version": "0.1.0",
   "private": true,
   "scripts": {
@@ -11,27 +11,27 @@
   },
   "dependencies": {
     "@next-auth/prisma-adapter": "^1.0.5",
-    "@prisma/client": "^4.11.0",
-    "@t3-oss/env-nextjs": "^0.2.1",
-    "next": "^13.4.1",
-    "next-auth": "^4.21.0",
+    "@prisma/client": "^4.14.0",
+    "@t3-oss/env-nextjs": "^0.3.1",
+    "next": "^13.4.2",
+    "next-auth": "^4.22.1",
     "react": "18.2.0",
     "react-dom": "18.2.0",
     "zod": "^3.21.4"
   },
   "devDependencies": {
-    "@types/eslint": "^8.21.3",
-    "@types/node": "^18.15.5",
-    "@types/react": "^18.0.28",
-    "@types/react-dom": "^18.0.11",
-    "@typescript-eslint/eslint-plugin": "^5.56.0",
-    "@typescript-eslint/parser": "^5.56.0",
-    "eslint": "^8.36.0",
-    "eslint-config-next": "^13.4.1",
-    "prisma": "^4.11.0",
-    "typescript": "^5.0.2"
+    "@types/eslint": "^8.37.0",
+    "@types/node": "^18.16.0",
+    "@types/react": "^18.2.6",
+    "@types/react-dom": "^18.2.4",
+    "@typescript-eslint/eslint-plugin": "^5.59.6",
+    "@typescript-eslint/parser": "^5.59.6",
+    "eslint": "^8.40.0",
+    "eslint-config-next": "^13.4.2",
+    "prisma": "^4.14.0",
+    "typescript": "^5.0.4"
   },
   "ct3aMetadata": {
-    "initVersion": "7.12.3"
+    "initVersion": "7.13.2"
   }
 }
diff --git a/prisma/schema.prisma b/prisma/schema.prisma
index 0001d80..a352ad5 100644
--- a/prisma/schema.prisma
+++ b/prisma/schema.prisma
@@ -3,6 +3,7 @@
 
 generator client {
     provider = "prisma-client-js"
+    previewFeatures = ["jsonProtocol"]
 }
 
 datasource db {
diff --git a/src/env.mjs b/src/env.mjs
index 79f915d..30fa238 100644
--- a/src/env.mjs
+++ b/src/env.mjs
@@ -1,5 +1,5 @@
-import { z } from "zod";
 import { createEnv } from "@t3-oss/env-nextjs";
+import { z } from "zod";
 
 export const env = createEnv({
   /**
@@ -46,4 +46,9 @@ export const env = createEnv({
     DISCORD_CLIENT_ID: process.env.DISCORD_CLIENT_ID,
     DISCORD_CLIENT_SECRET: process.env.DISCORD_CLIENT_SECRET,
   },
+  /**
+   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation.
+   * This is especially useful for Docker builds.
+   */
+  skipValidation: !!process.env.SKIP_ENV_VALIDATION,
 });
diff --git a/src/pages/_app.tsx b/src/pages/_app.tsx
index 76a32df..fad7ab2 100644
--- a/src/pages/_app.tsx
+++ b/src/pages/_app.tsx
@@ -1,7 +1,6 @@
-import { type AppType } from "next/app";
 import { type Session } from "next-auth";
 import { SessionProvider } from "next-auth/react";
-
+import { type AppType } from "next/app";
 import "~/styles/globals.css";
 
 const MyApp: AppType<{ session: Session | null }> = ({
diff --git a/src/pages/index.tsx b/src/pages/index.tsx
index 35f4e30..8af8ec8 100644
--- a/src/pages/index.tsx
+++ b/src/pages/index.tsx
@@ -1,9 +1,8 @@
 import styles from "./index.module.css";
-import { type NextPage } from "next";
 import Head from "next/head";
 import Link from "next/link";
 
-const Home: NextPage = () => {
+export default function Home() {
   return (
     <>
       <Head>
@@ -44,6 +43,4 @@ const Home: NextPage = () => {
       </main>
     </>
   );
-};
-
-export default Home;
+}
diff --git a/src/server/auth.ts b/src/server/auth.ts
index ed57078..e3f5444 100644
--- a/src/server/auth.ts
+++ b/src/server/auth.ts
@@ -1,3 +1,4 @@
+import { PrismaAdapter } from "@next-auth/prisma-adapter";
 import { type GetServerSidePropsContext } from "next";
 import {
   getServerSession,
@@ -5,7 +6,6 @@ import {
   type DefaultSession,
 } from "next-auth";
 import DiscordProvider from "next-auth/providers/discord";
-import { PrismaAdapter } from "@next-auth/prisma-adapter";
 import { env } from "~/env.mjs";
 import { prisma } from "~/server/db";
 
diff --git a/src/server/db.ts b/src/server/db.ts
index 861093d..87ece8b 100644
--- a/src/server/db.ts
+++ b/src/server/db.ts
@@ -1,5 +1,4 @@
 import { PrismaClient } from "@prisma/client";
-
 import { env } from "~/env.mjs";
 
 const globalForPrisma = globalThis as unknown as {
