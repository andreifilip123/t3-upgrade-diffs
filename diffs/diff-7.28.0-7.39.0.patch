diff --git a/.eslintrc.cjs b/.eslintrc.cjs
deleted file mode 100644
index c946e46..0000000
--- a/.eslintrc.cjs
+++ /dev/null
@@ -1,37 +0,0 @@
-/** @type {import("eslint").Linter.Config} */
-const config = {
-  parser: "@typescript-eslint/parser",
-  parserOptions: {
-    project: true,
-  },
-  plugins: ["@typescript-eslint"],
-  extends: [
-    "next/core-web-vitals",
-    "plugin:@typescript-eslint/recommended-type-checked",
-    "plugin:@typescript-eslint/stylistic-type-checked",
-  ],
-  rules: {
-    // These opinionated rules are enabled in stylistic-type-checked above.
-    // Feel free to reconfigure them to your own preference.
-    "@typescript-eslint/array-type": "off",
-    "@typescript-eslint/consistent-type-definitions": "off",
-
-    "@typescript-eslint/consistent-type-imports": [
-      "warn",
-      {
-        prefer: "type-imports",
-        fixStyle: "inline-type-imports",
-      },
-    ],
-    "@typescript-eslint/no-unused-vars": ["warn", { argsIgnorePattern: "^_" }],
-    "@typescript-eslint/require-await": "off",
-    "@typescript-eslint/no-misused-promises": [
-      "error",
-      {
-        checksVoidReturn: { attributes: false },
-      },
-    ],
-  },
-};
-
-module.exports = config;
diff --git a/.gitignore b/.gitignore
index 2971a0b..c24a835 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,6 +11,7 @@
 # database
 /prisma/db.sqlite
 /prisma/db.sqlite-journal
+db.sqlite
 
 # next.js
 /.next/
@@ -40,3 +41,6 @@ yarn-error.log*
 
 # typescript
 *.tsbuildinfo
+
+# idea files
+.idea
\ No newline at end of file
diff --git a/next.config.js b/next.config.js
index ffbeb9f..080cc56 100644
--- a/next.config.js
+++ b/next.config.js
@@ -2,7 +2,7 @@
  * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially useful
  * for Docker builds.
  */
-await import("./src/env.js");
+import "./src/env.js";
 
 /** @type {import("next").NextConfig} */
 const config = {
diff --git a/package.json b/package.json
index df27cee..932ee31 100644
--- a/package.json
+++ b/package.json
@@ -1,33 +1,29 @@
 {
-  "name": "current",
+  "name": "upgrade",
   "version": "0.1.0",
   "type": "module",
   "private": true,
   "scripts": {
-    "dev": "next dev",
+    "dev": "next dev --turbo",
     "build": "next build",
     "start": "next start",
-    "lint": "next lint"
+    "preview": "next build && next start",
+    "typecheck": "tsc --noEmit"
   },
   "dependencies": {
-    "@t3-oss/env-nextjs": "^0.9.2",
-    "next": "^14.1.0",
-    "react": "18.2.0",
-    "react-dom": "18.2.0",
-    "zod": "^3.22.4"
+    "@t3-oss/env-nextjs": "^0.12.0",
+    "next": "^15.2.3",
+    "react": "^19.0.0",
+    "react-dom": "^19.0.0",
+    "zod": "^3.24.2"
   },
   "devDependencies": {
-    "@types/eslint": "^8.56.2",
-    "@types/node": "^20.11.20",
-    "@types/react": "^18.2.57",
-    "@types/react-dom": "^18.2.19",
-    "@typescript-eslint/eslint-plugin": "^7.0.2",
-    "@typescript-eslint/parser": "^7.0.2",
-    "eslint": "^8.56.0",
-    "eslint-config-next": "^14.1.0",
-    "typescript": "^5.3.3"
+    "@types/node": "^20.14.10",
+    "@types/react": "^19.0.0",
+    "@types/react-dom": "^19.0.0",
+    "typescript": "^5.8.2"
   },
   "ct3aMetadata": {
-    "initVersion": "7.28.0"
+    "initVersion": "7.39.0"
   }
 }
diff --git a/src/pages/_app.tsx b/src/pages/_app.tsx
index 7fe4731..be27911 100644
--- a/src/pages/_app.tsx
+++ b/src/pages/_app.tsx
@@ -1,17 +1,17 @@
 import { type AppType } from "next/dist/shared/lib/utils";
-import { Inter } from "next/font/google";
+import { Geist } from "next/font/google";
 
 import "~/styles/globals.css";
 
-const inter = Inter({
+const geist = Geist({
   subsets: ["latin"],
 });
 
 const MyApp: AppType = ({ Component, pageProps }) => {
   return (
-    <main className={inter.className}>
+    <div className={geist.className}>
       <Component {...pageProps} />
-    </main>
+    </div>
   );
 };
 
diff --git a/tsconfig.json b/tsconfig.json
index 905062d..7fa4ce0 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -8,6 +8,7 @@
     "resolveJsonModule": true,
     "moduleDetection": "force",
     "isolatedModules": true,
+    "verbatimModuleSyntax": true,
 
     /* Strictness */
     "strict": true,
